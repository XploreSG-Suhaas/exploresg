# ArgoCD ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # General configuration
  application.instanceLabelKey: argocd.argoproj.io/instance

  # Repository configuration
  repositories: |
    - type: git
      url: https://github.com/your-org/exploresg
    - type: helm
      url: https://charts.bitnami.com/bitnami
      name: bitnami
    - type: helm
      url: https://prometheus-community.github.io/helm-charts
      name: prometheus-community

  # Resource customizations
  resource.customizations.health.argoproj.io_Application: |
    hs = {}
    hs.status = "Progressing"
    hs.message = ""
    if obj.status ~= nil then
      if obj.status.health ~= nil then
        hs.status = obj.status.health.status
        if obj.status.health.message ~= nil then
          hs.message = obj.status.health.message
        end
      end
    end
    return hs

  # Server configuration
  url: https://localhost:30443

  # OIDC configuration (optional)
  # oidc.config: |
  #   name: OIDC
  #   issuer: https://your-oidc-provider
  #   clientId: argocd
  #   clientSecret: $oidc.clientSecret
  #   requestedScopes: ["openid", "profile", "email", "groups"]
  #   requestedIDTokenClaims: {"groups": {"essential": true}}

---
# ArgoCD Command Parameters ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
data:
  # Server configuration
  server.insecure: "true"
  server.basehref: /
  server.rootpath: /

  # Controller configuration
  controller.status.processors: "20"
  controller.operation.processors: "10"
  controller.self.heal.timeout.seconds: "5"
  controller.repo.server.timeout.seconds: "60"

  # Repo server configuration
  reposerver.parallelism.limit: "0"

---
# ArgoCD RBAC ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-rbac-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
data:
  # Default policy for local users
  policy.default: role:readonly

  # CSV format for RBAC policies
  policy.csv: |
    # Admin users have full access
    p, role:admin, applications, *, */*, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    p, role:admin, certificates, *, *, allow
    p, role:admin, accounts, *, *, allow
    p, role:admin, gpgkeys, *, *, allow
    p, role:admin, logs, *, *, allow
    p, role:admin, exec, *, *, allow

    # Developer users have limited access
    p, role:developer, applications, get, */*, allow
    p, role:developer, applications, sync, */*, allow
    p, role:developer, applications, action/*, */*, allow
    p, role:developer, applications, override, */*, allow
    p, role:developer, logs, get, */*, allow
    p, role:developer, exec, create, */*, allow

    # ReadOnly users can only view
    p, role:readonly, applications, get, */*, allow
    p, role:readonly, logs, get, */*, allow
    p, role:readonly, repositories, get, *, allow
    p, role:readonly, clusters, get, *, allow

    # Default admin user (change password after first login)
    g, admin, role:admin
