# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: server
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.1.0
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: xploresg-dev-2024
            - name: GF_INSTALL_PLUGINS
              value: grafana-piechart-panel,grafana-worldmap-panel,grafana-kubernetes-app
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
            - name: GF_SERVER_ROOT_URL
              value: http://localhost:3000
            - name: GF_ANALYTICS_REPORTING_ENABLED
              value: "false"
            - name: GF_ANALYTICS_CHECK_FOR_UPDATES
              value: "false"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_LOG_LEVEL
              value: info
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /api/health
              port: grafana
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: grafana
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboard-k8s-overview
              mountPath: /var/lib/grafana/dashboards/kubernetes-overview.json
              subPath: kubernetes-overview.json
            - name: grafana-dashboard-xploresg
              mountPath: /var/lib/grafana/dashboards/xploresg-app.json
              subPath: xploresg-app.json
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 472
            runAsGroup: 472
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: grafana-dashboard-k8s-overview
          configMap:
            name: grafana-dashboard-k8s-overview
        - name: grafana-dashboard-xploresg
          configMap:
            name: grafana-dashboard-xploresg
      securityContext:
        fsGroup: 472
---
# Grafana PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  ports:
    - name: grafana
      port: 3000
      targetPort: grafana
      protocol: TCP
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
